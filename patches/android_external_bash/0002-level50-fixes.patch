From d5d7c338ca5a1bc0f301307f35d6522b2ee60a4b Mon Sep 17 00:00:00 2001
From: Amir Goldstein <amir@cellrox.com>
Date: Thu, 9 Oct 2014 23:42:02 +0300
Subject: [PATCH] bash: fixes to 4.2 patch level 50 update

Forgot to update yacc products when upgrading to patch level 50.

* took yacc products from Linux build
* fixed compile error in function save_input_line_state() which returned
  no value
* fixed project-params to include all changes

Change-Id: I70d5ce03db2d45be580dba8767ca72008bf042c9
---
 project-params |    9 +-
 y.tab.c        | 1542 +++++++++++++++++++++++++++++++++++---------------------
 y.tab.h        |   44 +-
 3 files changed, 987 insertions(+), 608 deletions(-)

diff --git a/y.tab.c b/y.tab.c
index 85c96d7..693513d 100644
--- a/y.tab.c
+++ b/y.tab.c
@@ -1,24 +1,23 @@
-/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Skeleton implementation for Bison's Yacc-like parsers in C
+/* A Bison parser, made by GNU Bison 2.4.1.  */
 
-   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+/* Skeleton implementation for Bison's Yacc-like parsers in C
+   
+      Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
    Free Software Foundation, Inc.
-
-   This program is free software; you can redistribute it and/or modify
+   
+   This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation; either version 2, or (at your option)
-   any later version.
-
+   the Free Software Foundation, either version 3 of the License, or
+   (at your option) any later version.
+   
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-
+   
    You should have received a copy of the GNU General Public License
-   along with this program; if not, write to the Free Software
-   Foundation, Inc., 51 Franklin Street, Fifth Floor,
-   Boston, MA 02110-1301, USA.  */
+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -29,7 +28,7 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-
+   
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
@@ -47,7 +46,7 @@
 #define YYBISON 1
 
 /* Bison version.  */
-#define YYBISON_VERSION "2.3"
+#define YYBISON_VERSION "2.4.1"
 
 /* Skeleton name.  */
 #define YYSKELETON_NAME "yacc.c"
@@ -55,120 +54,21 @@
 /* Pure parsers.  */
 #define YYPURE 0
 
-/* Using locations.  */
-#define YYLSP_NEEDED 0
+/* Push parsers.  */
+#define YYPUSH 0
 
+/* Pull parsers.  */
+#define YYPULL 1
 
-
-/* Tokens.  */
-#ifndef YYTOKENTYPE
-# define YYTOKENTYPE
-   /* Put the tokens into the symbol table, so that GDB and other debuggers
-      know about them.  */
-   enum yytokentype {
-     IF = 258,
-     THEN = 259,
-     ELSE = 260,
-     ELIF = 261,
-     FI = 262,
-     CASE = 263,
-     ESAC = 264,
-     FOR = 265,
-     SELECT = 266,
-     WHILE = 267,
-     UNTIL = 268,
-     DO = 269,
-     DONE = 270,
-     FUNCTION = 271,
-     COPROC = 272,
-     COND_START = 273,
-     COND_END = 274,
-     COND_ERROR = 275,
-     IN = 276,
-     BANG = 277,
-     TIME = 278,
-     TIMEOPT = 279,
-     TIMEIGN = 280,
-     WORD = 281,
-     ASSIGNMENT_WORD = 282,
-     REDIR_WORD = 283,
-     NUMBER = 284,
-     ARITH_CMD = 285,
-     ARITH_FOR_EXPRS = 286,
-     COND_CMD = 287,
-     AND_AND = 288,
-     OR_OR = 289,
-     GREATER_GREATER = 290,
-     LESS_LESS = 291,
-     LESS_AND = 292,
-     LESS_LESS_LESS = 293,
-     GREATER_AND = 294,
-     SEMI_SEMI = 295,
-     SEMI_AND = 296,
-     SEMI_SEMI_AND = 297,
-     LESS_LESS_MINUS = 298,
-     AND_GREATER = 299,
-     AND_GREATER_GREATER = 300,
-     LESS_GREATER = 301,
-     GREATER_BAR = 302,
-     BAR_AND = 303,
-     yacc_EOF = 304
-   };
-#endif
-/* Tokens.  */
-#define IF 258
-#define THEN 259
-#define ELSE 260
-#define ELIF 261
-#define FI 262
-#define CASE 263
-#define ESAC 264
-#define FOR 265
-#define SELECT 266
-#define WHILE 267
-#define UNTIL 268
-#define DO 269
-#define DONE 270
-#define FUNCTION 271
-#define COPROC 272
-#define COND_START 273
-#define COND_END 274
-#define COND_ERROR 275
-#define IN 276
-#define BANG 277
-#define TIME 278
-#define TIMEOPT 279
-#define TIMEIGN 280
-#define WORD 281
-#define ASSIGNMENT_WORD 282
-#define REDIR_WORD 283
-#define NUMBER 284
-#define ARITH_CMD 285
-#define ARITH_FOR_EXPRS 286
-#define COND_CMD 287
-#define AND_AND 288
-#define OR_OR 289
-#define GREATER_GREATER 290
-#define LESS_LESS 291
-#define LESS_AND 292
-#define LESS_LESS_LESS 293
-#define GREATER_AND 294
-#define SEMI_SEMI 295
-#define SEMI_AND 296
-#define SEMI_SEMI_AND 297
-#define LESS_LESS_MINUS 298
-#define AND_GREATER 299
-#define AND_GREATER_GREATER 300
-#define LESS_GREATER 301
-#define GREATER_BAR 302
-#define BAR_AND 303
-#define yacc_EOF 304
-
+/* Using locations.  */
+#define YYLSP_NEEDED 0
 
 
 
 /* Copy the first part of user declarations.  */
-#line 21 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 189 of yacc.c  */
+#line 21 "./parse.y"
 
 #include "config.h"
 
@@ -471,6 +371,9 @@ static REDIRECTEE source;
 static REDIRECTEE redir;
 
 
+/* Line 189 of yacc.c  */
+#line 376 "y.tab.c"
+
 /* Enabling traces.  */
 #ifndef YYDEBUG
 # define YYDEBUG 0
@@ -489,10 +392,121 @@ static REDIRECTEE redir;
 # define YYTOKEN_TABLE 0
 #endif
 
+
+/* Tokens.  */
+#ifndef YYTOKENTYPE
+# define YYTOKENTYPE
+   /* Put the tokens into the symbol table, so that GDB and other debuggers
+      know about them.  */
+   enum yytokentype {
+     IF = 258,
+     THEN = 259,
+     ELSE = 260,
+     ELIF = 261,
+     FI = 262,
+     CASE = 263,
+     ESAC = 264,
+     FOR = 265,
+     SELECT = 266,
+     WHILE = 267,
+     UNTIL = 268,
+     DO = 269,
+     DONE = 270,
+     FUNCTION = 271,
+     COPROC = 272,
+     COND_START = 273,
+     COND_END = 274,
+     COND_ERROR = 275,
+     IN = 276,
+     BANG = 277,
+     TIME = 278,
+     TIMEOPT = 279,
+     TIMEIGN = 280,
+     WORD = 281,
+     ASSIGNMENT_WORD = 282,
+     REDIR_WORD = 283,
+     NUMBER = 284,
+     ARITH_CMD = 285,
+     ARITH_FOR_EXPRS = 286,
+     COND_CMD = 287,
+     AND_AND = 288,
+     OR_OR = 289,
+     GREATER_GREATER = 290,
+     LESS_LESS = 291,
+     LESS_AND = 292,
+     LESS_LESS_LESS = 293,
+     GREATER_AND = 294,
+     SEMI_SEMI = 295,
+     SEMI_AND = 296,
+     SEMI_SEMI_AND = 297,
+     LESS_LESS_MINUS = 298,
+     AND_GREATER = 299,
+     AND_GREATER_GREATER = 300,
+     LESS_GREATER = 301,
+     GREATER_BAR = 302,
+     BAR_AND = 303,
+     yacc_EOF = 304
+   };
+#endif
+/* Tokens.  */
+#define IF 258
+#define THEN 259
+#define ELSE 260
+#define ELIF 261
+#define FI 262
+#define CASE 263
+#define ESAC 264
+#define FOR 265
+#define SELECT 266
+#define WHILE 267
+#define UNTIL 268
+#define DO 269
+#define DONE 270
+#define FUNCTION 271
+#define COPROC 272
+#define COND_START 273
+#define COND_END 274
+#define COND_ERROR 275
+#define IN 276
+#define BANG 277
+#define TIME 278
+#define TIMEOPT 279
+#define TIMEIGN 280
+#define WORD 281
+#define ASSIGNMENT_WORD 282
+#define REDIR_WORD 283
+#define NUMBER 284
+#define ARITH_CMD 285
+#define ARITH_FOR_EXPRS 286
+#define COND_CMD 287
+#define AND_AND 288
+#define OR_OR 289
+#define GREATER_GREATER 290
+#define LESS_LESS 291
+#define LESS_AND 292
+#define LESS_LESS_LESS 293
+#define GREATER_AND 294
+#define SEMI_SEMI 295
+#define SEMI_AND 296
+#define SEMI_SEMI_AND 297
+#define LESS_LESS_MINUS 298
+#define AND_GREATER 299
+#define AND_GREATER_GREATER 300
+#define LESS_GREATER 301
+#define GREATER_BAR 302
+#define BAR_AND 303
+#define yacc_EOF 304
+
+
+
+
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef union YYSTYPE
-#line 323 "/Users/chet/src/bash/src/parse.y"
 {
+
+/* Line 214 of yacc.c  */
+#line 323 "./parse.y"
+
   WORD_DESC *word;		/* the word that we read. */
   int number;			/* the number that we read. */
   WORD_LIST *word_list;
@@ -500,22 +514,23 @@ typedef union YYSTYPE
   REDIRECT *redirect;
   ELEMENT element;
   PATTERN_LIST *pattern;
-}
-/* Line 187 of yacc.c.  */
-#line 506 "y.tab.c"
-	YYSTYPE;
+
+
+
+/* Line 214 of yacc.c  */
+#line 522 "y.tab.c"
+} YYSTYPE;
+# define YYSTYPE_IS_TRIVIAL 1
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
-# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 
-
 /* Copy the second part of user declarations.  */
 
 
-/* Line 216 of yacc.c.  */
-#line 519 "y.tab.c"
+/* Line 264 of yacc.c  */
+#line 534 "y.tab.c"
 
 #ifdef short
 # undef short
@@ -590,14 +605,14 @@ typedef short int yytype_int16;
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static int
-YYID (int i)
+YYID (int yyi)
 #else
 static int
-YYID (i)
-    int i;
+YYID (yyi)
+    int yyi;
 #endif
 {
-  return i;
+  return yyi;
 }
 #endif
 
@@ -678,9 +693,9 @@ void free (void *); /* INFRINGES ON USER NAME SPACE */
 /* A type that is properly aligned for any stack member.  */
 union yyalloc
 {
-  yytype_int16 yyss;
-  YYSTYPE yyvs;
-  };
+  yytype_int16 yyss_alloc;
+  YYSTYPE yyvs_alloc;
+};
 
 /* The size of the maximum gap between one aligned stack and the next.  */
 # define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)
@@ -714,12 +729,12 @@ union yyalloc
    elements in the stack, and YYPTR gives the new location of the
    stack.  Advance YYPTR to a properly aligned location for the next
    stack.  */
-# define YYSTACK_RELOCATE(Stack)					\
+# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
     do									\
       {									\
 	YYSIZE_T yynewbytes;						\
-	YYCOPY (&yyptr->Stack, Stack, yysize);				\
-	Stack = &yyptr->Stack;						\
+	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
+	Stack = &yyptr->Stack_alloc;					\
 	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
 	yyptr += yynewbytes / sizeof (*yyptr);				\
       }									\
@@ -730,7 +745,7 @@ union yyalloc
 /* YYFINAL -- State number of the termination state.  */
 #define YYFINAL  116
 /* YYLAST -- Last index in YYTABLE.  */
-#define YYLAST   659
+#define YYLAST   638
 
 /* YYNTOKENS -- Number of terminals.  */
 #define YYNTOKENS  61
@@ -739,7 +754,7 @@ union yyalloc
 /* YYNRULES -- Number of rules.  */
 #define YYNRULES  167
 /* YYNRULES -- Number of states.  */
-#define YYNSTATES  342
+#define YYNSTATES  334
 
 /* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
 #define YYUNDEFTOK  2
@@ -1018,80 +1033,78 @@ static const yytype_uint8 yydefact[] =
       10,    11,   110,   101,    56,     0,     0,   154,   155,     0,
        0,     0,   147,   147,   147,   147,   147,   147,     0,   147,
        0,   147,     0,     0,     0,     0,   147,     0,   147,     0,
-       0,   147,    99,    98,   105,     0,   152,   153,     0,     0,
-     163,   162,   147,   147,   107,     0,     0,     0,   134,   135,
-     133,     0,   116,   147,     0,   147,   147,     0,     6,     0,
-     147,     0,    85,    86,   147,   147,   147,   147,     0,     0,
-       0,     0,    66,    67,     0,   100,    96,     0,     0,   109,
-     136,   137,   138,   139,   140,    95,   122,   124,   126,   117,
-       0,    93,   128,     0,     0,     0,     0,    75,     7,   147,
-       0,    76,     0,     0,     0,     0,    87,     0,   147,    88,
-      97,   108,   147,   147,   147,   147,   123,   125,   127,    94,
-       0,     0,   147,    77,    78,     0,   147,   147,    83,    84,
-      89,    90,     0,   113,     0,     0,     0,   147,   129,   118,
-     119,   147,   147,     0,     0,   147,   147,   147,   115,   120,
-     121,     0,     0,    81,    82,     0,     0,   114,    79,    80,
-      91,    92
+       0,   147,    99,    98,   105,     0,   152,   153,   163,   162,
+     147,   147,   107,     0,     0,     0,   134,   135,   133,     0,
+     116,   147,     0,   147,   147,     0,     6,     0,   147,     0,
+      85,    86,   147,   147,   147,   147,     0,     0,     0,     0,
+      66,    67,     0,   100,    96,     0,     0,   109,   136,   137,
+     138,   139,   140,    95,   122,   124,   126,   117,     0,    93,
+     128,     0,     0,     0,     0,    75,     7,   147,     0,    76,
+       0,     0,     0,     0,    87,     0,   147,    88,    97,   108,
+     147,   123,   125,   127,    94,     0,     0,   147,    77,    78,
+       0,   147,   147,    83,    84,    89,    90,     0,   113,   147,
+     129,   118,   119,   147,   147,     0,     0,   147,   147,   147,
+     115,   120,   121,     0,     0,    81,    82,     0,     0,   114,
+      79,    80,    91,    92
 };
 
 /* YYDEFGOTO[NTERM-NUM].  */
 static const yytype_int16 yydefgoto[] =
 {
-      -1,    34,   239,    35,    36,   120,    37,    38,    39,    40,
+      -1,    34,   237,    35,    36,   120,    37,    38,    39,    40,
       41,    42,    43,    44,   213,    45,    46,    47,    48,    49,
-      50,   225,   231,   232,   233,   274,    57,    58,   134,   135,
-     123,    74,    59,    51,   187,   136,    54,    55
+      50,   223,   229,   230,   231,   272,    57,    58,   134,   135,
+     123,    74,    59,    51,    52,   136,    54,    55
 };
 
 /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
    STATE-NUM.  */
-#define YYPACT_NINF -208
+#define YYPACT_NINF -205
 static const yytype_int16 yypact[] =
 {
-     296,   -35,  -208,    -2,    38,    10,  -208,  -208,    24,   546,
-      31,   346,    51,    47,  -208,   591,   604,  -208,    56,    71,
-     -18,   112,   130,   115,   128,   136,   143,   154,  -208,  -208,
-     157,   170,  -208,  -208,   111,  -208,  -208,   229,  -208,   578,
-    -208,  -208,  -208,  -208,  -208,  -208,  -208,  -208,  -208,  -208,
-    -208,   -12,    -3,  -208,    48,   346,  -208,  -208,   208,   396,
-    -208,    73,    15,   163,   190,   201,   160,   107,   229,   578,
-     204,  -208,  -208,  -208,  -208,  -208,   195,   165,   202,   215,
-     152,   216,   153,   222,   227,   236,   237,   244,   245,   253,
-     158,   254,   171,   255,   256,   259,   261,   262,  -208,  -208,
-    -208,  -208,  -208,  -208,  -208,  -208,  -208,  -208,  -208,  -208,
-    -208,  -208,  -208,  -208,   231,   230,  -208,  -208,  -208,  -208,
-     578,  -208,  -208,  -208,  -208,  -208,   446,   446,  -208,  -208,
-    -208,  -208,  -208,  -208,  -208,   210,  -208,     4,  -208,    65,
-    -208,  -208,  -208,  -208,    70,  -208,  -208,   232,    41,   578,
-     578,  -208,  -208,  -208,  -208,  -208,  -208,  -208,  -208,  -208,
-    -208,  -208,  -208,  -208,  -208,  -208,  -208,  -208,  -208,  -208,
-    -208,  -208,  -208,  -208,  -208,  -208,  -208,  -208,  -208,  -208,
-    -208,  -208,  -208,  -208,  -208,   396,   396,    23,    23,   496,
-     496,    97,  -208,  -208,  -208,  -208,  -208,  -208,    85,  -208,
-     185,  -208,   276,   235,   100,   110,  -208,   268,  -208,   280,
-     283,  -208,   578,  -208,   578,    41,  -208,  -208,   446,   446,
-      48,    48,  -208,  -208,  -208,   295,   396,   396,   396,   396,
-     396,   294,   161,  -208,    19,  -208,  -208,   290,  -208,   200,
-    -208,   252,  -208,  -208,  -208,  -208,  -208,  -208,   302,   396,
-     200,   269,  -208,  -208,    41,   578,  -208,   313,   324,  -208,
-    -208,  -208,    55,    55,    55,  -208,  -208,  -208,  -208,   192,
-      34,  -208,  -208,   303,   -19,   315,   278,  -208,  -208,  -208,
-     114,  -208,   322,   286,   323,   287,  -208,   210,  -208,  -208,
-    -208,  -208,  -208,  -208,  -208,  -208,  -208,  -208,  -208,  -208,
-       8,   320,  -208,  -208,  -208,   117,  -208,  -208,  -208,  -208,
-    -208,  -208,   119,   167,   396,   396,   396,  -208,  -208,  -208,
-     396,  -208,  -208,   337,   307,  -208,  -208,  -208,  -208,  -208,
-     396,   345,   308,  -208,  -208,   352,   312,  -208,  -208,  -208,
-    -208,  -208
+     308,   -28,  -205,     6,    -1,    37,  -205,  -205,    57,   558,
+      18,   358,    54,    45,  -205,   251,   583,  -205,   102,   104,
+      35,   107,    80,   112,   127,   140,   146,   147,  -205,  -205,
+     153,   154,  -205,  -205,   188,  -205,  -205,   196,  -205,   219,
+    -205,  -205,  -205,  -205,  -205,  -205,  -205,  -205,  -205,  -205,
+    -205,    17,    23,  -205,   -19,   358,  -205,  -205,   185,   408,
+    -205,   144,    51,   166,   189,   207,   133,    28,   196,   219,
+     211,  -205,  -205,  -205,  -205,  -205,   201,   184,   220,   226,
+      81,   227,   126,   233,   234,   241,   242,   245,   246,   249,
+     142,   255,   148,   256,   257,   259,   266,   267,  -205,  -205,
+    -205,  -205,  -205,  -205,  -205,  -205,  -205,  -205,  -205,  -205,
+    -205,  -205,  -205,  -205,   243,   240,  -205,  -205,  -205,  -205,
+     219,  -205,  -205,  -205,  -205,  -205,   458,   458,  -205,  -205,
+    -205,  -205,  -205,  -205,  -205,   299,  -205,    68,  -205,    61,
+    -205,  -205,  -205,  -205,    72,  -205,  -205,   244,    41,   219,
+     219,  -205,  -205,  -205,  -205,  -205,  -205,  -205,  -205,  -205,
+    -205,  -205,  -205,  -205,  -205,  -205,  -205,  -205,  -205,  -205,
+    -205,  -205,  -205,  -205,  -205,  -205,  -205,  -205,  -205,  -205,
+    -205,  -205,  -205,  -205,  -205,   408,   408,    63,    63,   508,
+     508,   179,  -205,  -205,  -205,  -205,  -205,  -205,    60,  -205,
+     155,  -205,   287,   252,    74,   108,  -205,   286,  -205,   300,
+     302,  -205,   219,  -205,   219,    41,  -205,  -205,   -19,   -19,
+    -205,  -205,  -205,   307,   408,   408,   408,   408,   408,   313,
+     159,  -205,    -4,  -205,  -205,   312,  -205,   161,  -205,   265,
+    -205,  -205,  -205,  -205,  -205,  -205,   314,   408,   161,   270,
+    -205,  -205,    41,   219,  -205,   332,   336,  -205,  -205,  -205,
+      87,    87,    87,  -205,  -205,  -205,  -205,   178,    11,  -205,
+    -205,   315,   -43,   327,   298,  -205,  -205,  -205,   110,  -205,
+     342,   306,   343,   319,  -205,   299,  -205,  -205,  -205,  -205,
+    -205,  -205,  -205,  -205,  -205,   -32,   346,  -205,  -205,  -205,
+     113,  -205,  -205,  -205,  -205,  -205,  -205,   118,   137,  -205,
+    -205,  -205,   408,  -205,  -205,   363,   321,  -205,  -205,  -205,
+    -205,  -205,   408,   367,   325,  -205,  -205,   374,   333,  -205,
+    -205,  -205,  -205,  -205
 };
 
 /* YYPGOTO[NTERM-NUM].  */
 static const yytype_int16 yypgoto[] =
 {
-    -208,  -208,   164,   -37,   -31,   -62,   368,  -208,    -5,  -208,
-    -208,  -208,  -208,  -208,  -206,  -208,  -208,  -208,  -208,  -208,
-    -208,    66,  -208,   145,  -208,    88,  -173,    -6,  -208,  -207,
-    -208,   -45,   -48,  -208,     5,     3,    17,  -208
+    -205,  -205,   183,   -36,   -23,   -50,   364,  -205,    -7,  -205,
+    -205,  -205,  -205,  -205,  -204,  -205,  -205,  -205,  -205,  -205,
+    -205,    84,  -205,   167,  -205,   128,  -202,    -6,  -205,    52,
+    -205,   -46,   -48,  -205,  -119,    24,   -33,  -205
 };
 
 /* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
@@ -1101,142 +1114,138 @@ static const yytype_int16 yypgoto[] =
 #define YYTABLE_NINF -1
 static const yytype_uint16 yytable[] =
 {
-      64,    65,   119,    53,    69,    52,   118,   150,   100,   256,
-     130,   101,   137,   139,    75,   144,    56,   142,   148,   260,
-     261,   262,   263,   264,    60,   197,   114,   115,   271,   140,
-     124,   125,   119,   248,   301,   251,    63,   118,   102,   121,
-     122,   302,   287,   299,     2,   272,   126,   127,   290,     3,
-      66,     4,     5,     6,     7,   133,   124,   125,   131,    10,
-     272,   301,   149,    70,    61,    71,    72,    73,   317,    62,
-     133,    17,   141,   284,   285,    76,   185,   186,   273,   199,
-     189,   190,    98,   184,   206,   133,   200,   214,   192,   193,
-     198,   207,   133,   273,   204,   205,   128,    99,    32,   235,
-      33,   129,   222,   223,   224,   215,    77,   262,   263,   264,
-       2,   116,   119,   184,   244,     3,   133,     4,     5,     6,
-       7,   133,   201,   138,   246,    10,   191,   208,   306,    53,
-      53,   321,   188,   325,   202,   203,   133,    17,   103,   209,
-     210,   107,   236,   212,   226,   227,   228,   229,   230,   234,
-     255,   133,   335,   336,   108,   240,   104,   245,   249,   105,
-     249,   133,   109,   254,    32,   133,    33,   247,   133,   110,
-     133,   307,   327,   223,   322,   119,   326,   184,   156,   160,
-     111,   157,   161,   112,   170,   270,   106,   171,    53,    53,
-     216,   217,   280,   237,   279,   241,   113,   174,   249,   249,
-     175,   266,   267,   268,   145,   288,   220,   221,   158,   162,
-     212,   238,   132,   143,   172,   146,   257,   258,   184,   147,
-     152,    53,    53,   151,   188,   153,   278,   176,   154,   275,
-     276,   305,   296,   297,   298,    71,    72,    73,   282,   283,
-     312,   155,   159,   192,   193,   314,   315,   316,   163,   212,
-      71,    72,    73,   164,   320,   117,    14,    15,    16,   194,
-     195,   196,   165,   166,    18,    19,    20,    21,    22,   330,
-     167,   168,    23,    24,    25,    26,    27,   249,   249,   169,
-     173,   177,   178,    30,    31,   179,   313,   180,   181,   182,
-     183,   242,   211,   243,   238,   252,   319,     1,   253,     2,
-     323,   324,   259,   265,     3,   277,     4,     5,     6,     7,
-     281,   329,     8,     9,    10,   331,   332,   286,    11,    12,
-     291,   337,    13,    14,    15,    16,    17,   289,   292,   272,
-     303,    18,    19,    20,    21,    22,   304,   308,   310,    23,
-      24,    25,    26,    27,   309,   311,   318,    28,    29,     2,
-      30,    31,   333,    32,     3,    33,     4,     5,     6,     7,
-     338,   300,     8,     9,    10,   334,   339,   340,    11,    12,
-     341,   250,    13,    14,    15,    16,    17,    68,   269,   328,
-       0,    18,    19,    20,    21,    22,     0,     0,     0,    23,
-      24,    25,    26,    27,     0,     0,    71,    72,    73,     2,
-      30,    31,     0,    32,     3,    33,     4,     5,     6,     7,
-       0,     0,     8,     9,    10,     0,     0,     0,    11,    12,
-       0,     0,    13,    14,    15,    16,    17,     0,     0,     0,
-       0,    18,    19,    20,    21,    22,     0,     0,     0,    23,
-      24,    25,    26,    27,     0,     0,     0,   133,     0,     2,
-      30,    31,     0,    32,     3,    33,     4,     5,     6,     7,
-       0,     0,     8,     9,    10,     0,     0,     0,    11,    12,
-       0,     0,    13,    14,    15,    16,    17,     0,     0,     0,
-       0,    18,    19,    20,    21,    22,     0,     0,     0,    23,
-      24,    25,    26,    27,     0,     0,     0,     0,     0,     2,
-      30,    31,     0,    32,     3,    33,     4,     5,     6,     7,
-       0,     0,     8,     9,    10,     0,     0,     0,     0,     0,
-       0,     0,    13,    14,    15,    16,    17,     0,     0,     0,
-       0,    18,    19,    20,    21,    22,     0,     0,     0,    23,
-      24,    25,    26,    27,     0,     0,     0,   133,     0,     2,
-      30,    31,     0,    32,     3,    33,     4,     5,     6,     7,
-       0,     0,     0,     0,    10,     0,     0,     0,     0,     0,
-       0,     0,    67,    14,    15,    16,    17,     0,     0,     0,
-       0,    18,    19,    20,    21,    22,     0,     0,     0,    23,
-      24,    25,    26,    27,     0,     0,     0,     0,     0,     0,
-      30,    31,     0,    32,     0,    33,    15,    16,     0,     0,
+      64,    65,    69,   119,   246,   269,   249,   187,   188,   130,
+     296,   254,   137,   139,   118,   144,   142,   297,   148,   150,
+     294,   296,   270,    56,    53,    61,   114,   115,   309,   128,
+      62,     2,    60,   119,   129,    75,     3,   270,     4,     5,
+       6,     7,   282,   283,     2,   118,    10,   133,   288,     3,
+      70,     4,     5,     6,     7,   271,   124,   125,    17,    10,
+     149,   100,   133,    63,   101,   140,   216,   217,   121,   122,
+     271,    17,   126,   127,   233,   199,   185,   186,    76,   131,
+     189,   190,   200,    66,   184,    32,   206,    33,   242,   197,
+     198,   102,   133,   207,   204,   205,   124,   125,    32,   214,
+      33,    71,    72,    73,    77,   215,   104,   156,   141,   105,
+     157,   133,   133,   119,   184,   327,   328,   234,   201,   133,
+     192,   193,   244,   133,   301,   133,   191,   313,    98,   208,
+      99,   243,   317,   103,   202,   203,   106,   158,   107,   209,
+     210,   212,   319,   221,   224,   225,   226,   227,   228,   232,
+      53,    53,   160,   108,   238,   161,   218,   219,   247,   133,
+     247,   133,   253,   252,   133,   245,   109,   302,   170,   133,
+     314,   171,   110,   111,   174,   318,   119,   175,   184,   112,
+     113,   236,   162,   268,   220,   221,   222,   276,   116,   132,
+     278,   277,   147,   235,   138,   239,   247,   247,   172,   264,
+     265,   266,   286,   145,   176,    71,    72,    73,   212,    53,
+      53,    71,    72,    73,   255,   256,   143,   184,   291,   292,
+     293,   146,   117,    14,    15,    16,   152,   273,   274,   300,
+     151,    18,    19,    20,    21,    22,   280,   281,   307,    23,
+      24,    25,    26,    27,   153,   212,   154,    15,    16,   312,
+      30,    31,   155,   159,    18,    19,    20,    21,    22,   163,
+     164,   322,    23,    24,    25,    26,    27,   165,   166,   247,
+     247,   167,   168,    30,    31,   169,   258,   259,   260,   261,
+     262,   173,   177,   178,   308,   179,    78,    79,    80,    81,
+      82,   311,   180,   181,    83,   315,   316,    84,    85,   285,
+     183,   182,   240,   321,   211,    86,    87,   323,   324,     1,
+     241,     2,   236,   329,   257,   250,     3,   251,     4,     5,
+       6,     7,   263,   279,     8,     9,    10,   275,   287,   284,
+      11,    12,   192,   193,    13,    14,    15,    16,    17,   289,
+     290,   270,   298,    18,    19,    20,    21,    22,   194,   195,
+     196,    23,    24,    25,    26,    27,   299,   303,   305,    28,
+      29,     2,    30,    31,   304,    32,     3,    33,     4,     5,
+       6,     7,   310,    68,     8,     9,    10,   306,   325,   326,
+      11,    12,   330,   331,    13,    14,    15,    16,    17,   332,
+     248,   333,   320,    18,    19,    20,    21,    22,   267,   295,
+       0,    23,    24,    25,    26,    27,     0,     0,    71,    72,
+      73,     2,    30,    31,     0,    32,     3,    33,     4,     5,
+       6,     7,     0,     0,     8,     9,    10,     0,     0,     0,
+      11,    12,     0,     0,    13,    14,    15,    16,    17,     0,
        0,     0,     0,    18,    19,    20,    21,    22,     0,     0,
-       0,    23,    24,    25,    26,    27,    78,    79,    80,    81,
-      82,     0,    30,    31,    83,     0,     0,    84,    85,    88,
-      89,    90,    91,    92,     0,    86,    87,    93,     0,     0,
-      94,    95,     0,     0,     0,     0,     0,     0,    96,    97
+       0,    23,    24,    25,    26,    27,     0,     0,     0,   133,
+       0,     2,    30,    31,     0,    32,     3,    33,     4,     5,
+       6,     7,     0,     0,     8,     9,    10,     0,     0,     0,
+      11,    12,     0,     0,    13,    14,    15,    16,    17,     0,
+       0,     0,     0,    18,    19,    20,    21,    22,     0,     0,
+       0,    23,    24,    25,    26,    27,     0,     0,     0,     0,
+       0,     2,    30,    31,     0,    32,     3,    33,     4,     5,
+       6,     7,     0,     0,     8,     9,    10,     0,     0,     0,
+       0,     0,     0,     0,    13,    14,    15,    16,    17,     0,
+       0,     0,     0,    18,    19,    20,    21,    22,     0,     0,
+       0,    23,    24,    25,    26,    27,     0,     0,     0,   133,
+       0,     2,    30,    31,     0,    32,     3,    33,     4,     5,
+       6,     7,     0,     0,     0,     0,    10,     0,     0,     0,
+       0,     0,     0,     0,    67,    14,    15,    16,    17,     0,
+       0,     0,     0,    18,    19,    20,    21,    22,     0,     0,
+       0,    23,    24,    25,    26,    27,     0,     0,     0,     0,
+       0,     0,    30,    31,     0,    32,     0,    33,    88,    89,
+      90,    91,    92,     0,     0,     0,    93,     0,     0,    94,
+      95,     0,     0,     0,     0,     0,     0,    96,    97
 };
 
 static const yytype_int16 yycheck[] =
 {
-       6,     7,    39,     0,     9,     0,    37,    69,    26,   215,
-      55,    29,    60,    61,    11,    63,    51,    62,    66,   226,
-     227,   228,   229,   230,    26,    21,    32,    33,     9,    14,
-      33,    34,    69,   206,    53,   208,    26,    68,    56,    51,
-      52,    60,   249,     9,     3,    26,    49,    50,   254,     8,
-      26,    10,    11,    12,    13,    51,    33,    34,    55,    18,
-      26,    53,    67,    32,    26,    50,    51,    52,    60,    31,
-      51,    30,    57,   246,   247,    24,   124,   125,    59,    14,
-     128,   129,    26,   120,    14,    51,    21,   149,    33,    34,
-     138,    21,    51,    59,   142,   143,    48,    26,    57,    14,
-      59,    53,     5,     6,     7,   153,    59,   314,   315,   316,
-       3,     0,   149,   150,    14,     8,    51,    10,    11,    12,
-      13,    51,    57,    50,    14,    18,   132,    57,    14,   126,
-     127,    14,   127,    14,   140,   141,    51,    30,    26,   145,
-     146,    26,    57,   148,   192,   193,   194,   195,   196,   197,
-     212,    51,   325,   326,    26,   200,    26,    57,   206,    29,
-     208,    51,    26,   211,    57,    51,    59,    57,    51,    26,
-      51,    57,     5,     6,    57,   212,    57,   214,    26,    26,
-      26,    29,    29,    26,    26,   233,    56,    29,   185,   186,
-     185,   186,   240,   199,   239,   201,    26,    26,   246,   247,
-      29,    40,    41,    42,    14,   250,   189,   190,    56,    56,
-     215,    26,     4,    50,    56,    14,   222,   223,   255,    59,
-      25,   218,   219,    19,   219,    60,    26,    56,    26,   235,
-     236,   279,    40,    41,    42,    50,    51,    52,   244,   245,
-     288,    26,    26,    33,    34,   293,   294,   295,    26,   254,
-      50,    51,    52,    26,   302,    26,    27,    28,    29,    49,
-      50,    51,    26,    26,    35,    36,    37,    38,    39,   317,
-      26,    26,    43,    44,    45,    46,    47,   325,   326,    26,
-      26,    26,    26,    54,    55,    26,   292,    26,    26,    58,
-      60,    15,    60,    58,    26,    15,   302,     1,    15,     3,
-     306,   307,     7,     9,     8,    15,    10,    11,    12,    13,
-      58,   317,    16,    17,    18,   321,   322,    15,    22,    23,
-       7,   327,    26,    27,    28,    29,    30,    58,     4,    26,
-      15,    35,    36,    37,    38,    39,    58,    15,    15,    43,
-      44,    45,    46,    47,    58,    58,    26,    51,    52,     3,
-      54,    55,    15,    57,     8,    59,    10,    11,    12,    13,
-      15,   273,    16,    17,    18,    58,    58,    15,    22,    23,
-      58,   207,    26,    27,    28,    29,    30,     9,   233,   313,
-      -1,    35,    36,    37,    38,    39,    -1,    -1,    -1,    43,
-      44,    45,    46,    47,    -1,    -1,    50,    51,    52,     3,
-      54,    55,    -1,    57,     8,    59,    10,    11,    12,    13,
-      -1,    -1,    16,    17,    18,    -1,    -1,    -1,    22,    23,
-      -1,    -1,    26,    27,    28,    29,    30,    -1,    -1,    -1,
-      -1,    35,    36,    37,    38,    39,    -1,    -1,    -1,    43,
-      44,    45,    46,    47,    -1,    -1,    -1,    51,    -1,     3,
-      54,    55,    -1,    57,     8,    59,    10,    11,    12,    13,
-      -1,    -1,    16,    17,    18,    -1,    -1,    -1,    22,    23,
-      -1,    -1,    26,    27,    28,    29,    30,    -1,    -1,    -1,
-      -1,    35,    36,    37,    38,    39,    -1,    -1,    -1,    43,
-      44,    45,    46,    47,    -1,    -1,    -1,    -1,    -1,     3,
-      54,    55,    -1,    57,     8,    59,    10,    11,    12,    13,
-      -1,    -1,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,
-      -1,    -1,    26,    27,    28,    29,    30,    -1,    -1,    -1,
-      -1,    35,    36,    37,    38,    39,    -1,    -1,    -1,    43,
-      44,    45,    46,    47,    -1,    -1,    -1,    51,    -1,     3,
-      54,    55,    -1,    57,     8,    59,    10,    11,    12,    13,
-      -1,    -1,    -1,    -1,    18,    -1,    -1,    -1,    -1,    -1,
-      -1,    -1,    26,    27,    28,    29,    30,    -1,    -1,    -1,
-      -1,    35,    36,    37,    38,    39,    -1,    -1,    -1,    43,
-      44,    45,    46,    47,    -1,    -1,    -1,    -1,    -1,    -1,
-      54,    55,    -1,    57,    -1,    59,    28,    29,    -1,    -1,
+       6,     7,     9,    39,   206,     9,   208,   126,   127,    55,
+      53,   215,    60,    61,    37,    63,    62,    60,    66,    69,
+       9,    53,    26,    51,     0,    26,    32,    33,    60,    48,
+      31,     3,    26,    69,    53,    11,     8,    26,    10,    11,
+      12,    13,   244,   245,     3,    68,    18,    51,   252,     8,
+      32,    10,    11,    12,    13,    59,    33,    34,    30,    18,
+      67,    26,    51,    26,    29,    14,   185,   186,    51,    52,
+      59,    30,    49,    50,    14,    14,   124,   125,    24,    55,
+     128,   129,    21,    26,   120,    57,    14,    59,    14,    21,
+     138,    56,    51,    21,   142,   143,    33,    34,    57,   149,
+      59,    50,    51,    52,    59,   153,    26,    26,    57,    29,
+      29,    51,    51,   149,   150,   317,   318,    57,    57,    51,
+      33,    34,    14,    51,    14,    51,   132,    14,    26,    57,
+      26,    57,    14,    26,   140,   141,    56,    56,    26,   145,
+     146,   148,     5,     6,   192,   193,   194,   195,   196,   197,
+     126,   127,    26,    26,   200,    29,   189,   190,   206,    51,
+     208,    51,   212,   211,    51,    57,    26,    57,    26,    51,
+      57,    29,    26,    26,    26,    57,   212,    29,   214,    26,
+      26,    26,    56,   231,     5,     6,     7,    26,     0,     4,
+     238,   237,    59,   199,    50,   201,   244,   245,    56,    40,
+      41,    42,   248,    14,    56,    50,    51,    52,   215,   185,
+     186,    50,    51,    52,   220,   221,    50,   253,    40,    41,
+      42,    14,    26,    27,    28,    29,    25,   233,   234,   277,
+      19,    35,    36,    37,    38,    39,   242,   243,   286,    43,
+      44,    45,    46,    47,    60,   252,    26,    28,    29,   297,
+      54,    55,    26,    26,    35,    36,    37,    38,    39,    26,
+      26,   309,    43,    44,    45,    46,    47,    26,    26,   317,
+     318,    26,    26,    54,    55,    26,   224,   225,   226,   227,
+     228,    26,    26,    26,   290,    26,    35,    36,    37,    38,
+      39,   297,    26,    26,    43,   301,   302,    46,    47,   247,
+      60,    58,    15,   309,    60,    54,    55,   313,   314,     1,
+      58,     3,    26,   319,     7,    15,     8,    15,    10,    11,
+      12,    13,     9,    58,    16,    17,    18,    15,    58,    15,
+      22,    23,    33,    34,    26,    27,    28,    29,    30,     7,
+       4,    26,    15,    35,    36,    37,    38,    39,    49,    50,
+      51,    43,    44,    45,    46,    47,    58,    15,    15,    51,
+      52,     3,    54,    55,    58,    57,     8,    59,    10,    11,
+      12,    13,    26,     9,    16,    17,    18,    58,    15,    58,
+      22,    23,    15,    58,    26,    27,    28,    29,    30,    15,
+     207,    58,   308,    35,    36,    37,    38,    39,   231,   271,
+      -1,    43,    44,    45,    46,    47,    -1,    -1,    50,    51,
+      52,     3,    54,    55,    -1,    57,     8,    59,    10,    11,
+      12,    13,    -1,    -1,    16,    17,    18,    -1,    -1,    -1,
+      22,    23,    -1,    -1,    26,    27,    28,    29,    30,    -1,
+      -1,    -1,    -1,    35,    36,    37,    38,    39,    -1,    -1,
+      -1,    43,    44,    45,    46,    47,    -1,    -1,    -1,    51,
+      -1,     3,    54,    55,    -1,    57,     8,    59,    10,    11,
+      12,    13,    -1,    -1,    16,    17,    18,    -1,    -1,    -1,
+      22,    23,    -1,    -1,    26,    27,    28,    29,    30,    -1,
       -1,    -1,    -1,    35,    36,    37,    38,    39,    -1,    -1,
-      -1,    43,    44,    45,    46,    47,    35,    36,    37,    38,
-      39,    -1,    54,    55,    43,    -1,    -1,    46,    47,    35,
-      36,    37,    38,    39,    -1,    54,    55,    43,    -1,    -1,
-      46,    47,    -1,    -1,    -1,    -1,    -1,    -1,    54,    55
+      -1,    43,    44,    45,    46,    47,    -1,    -1,    -1,    -1,
+      -1,     3,    54,    55,    -1,    57,     8,    59,    10,    11,
+      12,    13,    -1,    -1,    16,    17,    18,    -1,    -1,    -1,
+      -1,    -1,    -1,    -1,    26,    27,    28,    29,    30,    -1,
+      -1,    -1,    -1,    35,    36,    37,    38,    39,    -1,    -1,
+      -1,    43,    44,    45,    46,    47,    -1,    -1,    -1,    51,
+      -1,     3,    54,    55,    -1,    57,     8,    59,    10,    11,
+      12,    13,    -1,    -1,    -1,    -1,    18,    -1,    -1,    -1,
+      -1,    -1,    -1,    -1,    26,    27,    28,    29,    30,    -1,
+      -1,    -1,    -1,    35,    36,    37,    38,    39,    -1,    -1,
+      -1,    43,    44,    45,    46,    47,    -1,    -1,    -1,    -1,
+      -1,    -1,    54,    55,    -1,    57,    -1,    59,    35,    36,
+      37,    38,    39,    -1,    -1,    -1,    43,    -1,    -1,    46,
+      47,    -1,    -1,    -1,    -1,    -1,    -1,    54,    55
 };
 
 /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
@@ -1264,20 +1273,19 @@ static const yytype_uint8 yystos[] =
       26,    26,    58,    60,    64,    93,    93,    95,    95,    93,
       93,    88,    33,    34,    49,    50,    51,    21,    93,    14,
       21,    57,    88,    88,    93,    93,    14,    21,    57,    88,
-      88,    60,    69,    75,    66,    93,    95,    95,    49,    50,
-      97,    97,     5,     6,     7,    82,    93,    93,    93,    93,
-      93,    83,    84,    85,    93,    14,    57,    88,    26,    63,
-      92,    88,    15,    58,    14,    57,    14,    57,    87,    93,
-      63,    87,    15,    15,    93,    66,    75,    88,    88,     7,
-      90,    90,    90,    90,    90,     9,    40,    41,    42,    84,
-      93,     9,    26,    59,    86,    88,    88,    15,    26,    92,
-      93,    58,    88,    88,    87,    87,    15,    90,    92,    58,
-      75,     7,     4,    49,    50,    51,    40,    41,    42,     9,
-      86,    53,    60,    15,    58,    93,    14,    57,    15,    58,
-      15,    58,    93,    88,    93,    93,    93,    60,    26,    88,
-      93,    14,    57,    88,    88,    14,    57,     5,    82,    88,
-      93,    88,    88,    15,    58,    87,    87,    88,    15,    58,
-      15,    58
+      88,    60,    69,    75,    66,    93,    95,    95,    97,    97,
+       5,     6,     7,    82,    93,    93,    93,    93,    93,    83,
+      84,    85,    93,    14,    57,    88,    26,    63,    92,    88,
+      15,    58,    14,    57,    14,    57,    87,    93,    63,    87,
+      15,    15,    93,    66,    75,    88,    88,     7,    90,    90,
+      90,    90,    90,     9,    40,    41,    42,    84,    93,     9,
+      26,    59,    86,    88,    88,    15,    26,    92,    93,    58,
+      88,    88,    87,    87,    15,    90,    92,    58,    75,     7,
+       4,    40,    41,    42,     9,    86,    53,    60,    15,    58,
+      93,    14,    57,    15,    58,    15,    58,    93,    88,    60,
+      26,    88,    93,    14,    57,    88,    88,    14,    57,     5,
+      82,    88,    93,    88,    88,    15,    58,    87,    87,    88,
+      15,    58,    15,    58
 };
 
 #define yyerrok		(yyerrstatus = 0)
@@ -1462,17 +1470,20 @@ yy_symbol_print (yyoutput, yytype, yyvaluep)
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static void
-yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
+yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
 #else
 static void
-yy_stack_print (bottom, top)
-    yytype_int16 *bottom;
-    yytype_int16 *top;
+yy_stack_print (yybottom, yytop)
+    yytype_int16 *yybottom;
+    yytype_int16 *yytop;
 #endif
 {
   YYFPRINTF (stderr, "Stack now");
-  for (; bottom <= top; ++bottom)
-    YYFPRINTF (stderr, " %d", *bottom);
+  for (; yybottom <= yytop; yybottom++)
+    {
+      int yybot = *yybottom;
+      YYFPRINTF (stderr, " %d", yybot);
+    }
   YYFPRINTF (stderr, "\n");
 }
 
@@ -1506,11 +1517,11 @@ yy_reduce_print (yyvsp, yyrule)
   /* The symbols being reduced.  */
   for (yyi = 0; yyi < yynrhs; yyi++)
     {
-      fprintf (stderr, "   $%d = ", yyi + 1);
+      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
       yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
 		       &(yyvsp[(yyi + 1) - (yynrhs)])
 		       		       );
-      fprintf (stderr, "\n");
+      YYFPRINTF (stderr, "\n");
     }
 }
 
@@ -1790,10 +1801,8 @@ yydestruct (yymsg, yytype, yyvaluep)
 	break;
     }
 }
-
 
 /* Prevent warnings from -Wmissing-prototypes.  */
-
 #ifdef YYPARSE_PARAM
 #if defined __STDC__ || defined __cplusplus
 int yyparse (void *YYPARSE_PARAM);
@@ -1809,11 +1818,10 @@ int yyparse ();
 #endif /* ! YYPARSE_PARAM */
 
 
-
-/* The look-ahead symbol.  */
+/* The lookahead symbol.  */
 int yychar;
 
-/* The semantic value of the look-ahead symbol.  */
+/* The semantic value of the lookahead symbol.  */
 YYSTYPE yylval;
 
 /* Number of syntax errors so far.  */
@@ -1821,9 +1829,9 @@ int yynerrs;
 
 
 
-/*----------.
-| yyparse.  |
-`----------*/
+/*-------------------------.
+| yyparse or yypush_parse.  |
+`-------------------------*/
 
 #ifdef YYPARSE_PARAM
 #if (defined __STDC__ || defined __C99__FUNC__ \
@@ -1847,66 +1855,68 @@ yyparse ()
 #endif
 #endif
 {
-  
-  int yystate;
-  int yyn;
-  int yyresult;
-  /* Number of tokens to shift before error messages enabled.  */
-  int yyerrstatus;
-  /* Look-ahead token as an internal (translated) token number.  */
-  int yytoken = 0;
-#if YYERROR_VERBOSE
-  /* Buffer for error messages, and its allocated size.  */
-  char yymsgbuf[128];
-  char *yymsg = yymsgbuf;
-  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
-#endif
 
-  /* Three stacks and their tools:
-     `yyss': related to states,
-     `yyvs': related to semantic values,
-     `yyls': related to locations.
 
-     Refer to the stacks thru separate pointers, to allow yyoverflow
-     to reallocate them elsewhere.  */
+    int yystate;
+    /* Number of tokens to shift before error messages enabled.  */
+    int yyerrstatus;
 
-  /* The state stack.  */
-  yytype_int16 yyssa[YYINITDEPTH];
-  yytype_int16 *yyss = yyssa;
-  yytype_int16 *yyssp;
+    /* The stacks and their tools:
+       `yyss': related to states.
+       `yyvs': related to semantic values.
 
-  /* The semantic value stack.  */
-  YYSTYPE yyvsa[YYINITDEPTH];
-  YYSTYPE *yyvs = yyvsa;
-  YYSTYPE *yyvsp;
+       Refer to the stacks thru separate pointers, to allow yyoverflow
+       to reallocate them elsewhere.  */
 
+    /* The state stack.  */
+    yytype_int16 yyssa[YYINITDEPTH];
+    yytype_int16 *yyss;
+    yytype_int16 *yyssp;
 
+    /* The semantic value stack.  */
+    YYSTYPE yyvsa[YYINITDEPTH];
+    YYSTYPE *yyvs;
+    YYSTYPE *yyvsp;
 
-#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))
-
-  YYSIZE_T yystacksize = YYINITDEPTH;
+    YYSIZE_T yystacksize;
 
+  int yyn;
+  int yyresult;
+  /* Lookahead token as an internal (translated) token number.  */
+  int yytoken;
   /* The variables used to return semantic value and location from the
      action routines.  */
   YYSTYPE yyval;
 
+#if YYERROR_VERBOSE
+  /* Buffer for error messages, and its allocated size.  */
+  char yymsgbuf[128];
+  char *yymsg = yymsgbuf;
+  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
+#endif
+
+#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))
 
   /* The number of symbols on the RHS of the reduced rule.
      Keep to zero when no symbol should be popped.  */
   int yylen = 0;
 
+  yytoken = 0;
+  yyss = yyssa;
+  yyvs = yyvsa;
+  yystacksize = YYINITDEPTH;
+
   YYDPRINTF ((stderr, "Starting parse\n"));
 
   yystate = 0;
   yyerrstatus = 0;
   yynerrs = 0;
-  yychar = YYEMPTY;		/* Cause a token to be read.  */
+  yychar = YYEMPTY; /* Cause a token to be read.  */
 
   /* Initialize stack pointers.
      Waste one element of value and location stack
      so that they stay on the same level as the state stack.
      The wasted elements are never initialized.  */
-
   yyssp = yyss;
   yyvsp = yyvs;
 
@@ -1936,7 +1946,6 @@ yyparse ()
 	YYSTYPE *yyvs1 = yyvs;
 	yytype_int16 *yyss1 = yyss;
 
-
 	/* Each stack pointer address is followed by the size of the
 	   data in use in that stack, in bytes.  This used to be a
 	   conditional around just the two extra args, but that might
@@ -1944,7 +1953,6 @@ yyparse ()
 	yyoverflow (YY_("memory exhausted"),
 		    &yyss1, yysize * sizeof (*yyssp),
 		    &yyvs1, yysize * sizeof (*yyvsp),
-
 		    &yystacksize);
 
 	yyss = yyss1;
@@ -1967,9 +1975,8 @@ yyparse ()
 	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
 	if (! yyptr)
 	  goto yyexhaustedlab;
-	YYSTACK_RELOCATE (yyss);
-	YYSTACK_RELOCATE (yyvs);
-
+	YYSTACK_RELOCATE (yyss_alloc, yyss);
+	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
 #  undef YYSTACK_RELOCATE
 	if (yyss1 != yyssa)
 	  YYSTACK_FREE (yyss1);
@@ -1980,7 +1987,6 @@ yyparse ()
       yyssp = yyss + yysize - 1;
       yyvsp = yyvs + yysize - 1;
 
-
       YYDPRINTF ((stderr, "Stack size increased to %lu\n",
 		  (unsigned long int) yystacksize));
 
@@ -1990,6 +1996,9 @@ yyparse ()
 
   YYDPRINTF ((stderr, "Entering state %d\n", yystate));
 
+  if (yystate == YYFINAL)
+    YYACCEPT;
+
   goto yybackup;
 
 /*-----------.
@@ -1998,16 +2007,16 @@ yyparse ()
 yybackup:
 
   /* Do appropriate processing given the current state.  Read a
-     look-ahead token if we need one and don't already have one.  */
+     lookahead token if we need one and don't already have one.  */
 
-  /* First try to decide what to do without reference to look-ahead token.  */
+  /* First try to decide what to do without reference to lookahead token.  */
   yyn = yypact[yystate];
   if (yyn == YYPACT_NINF)
     goto yydefault;
 
-  /* Not known => get a look-ahead token if don't already have one.  */
+  /* Not known => get a lookahead token if don't already have one.  */
 
-  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
+  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
   if (yychar == YYEMPTY)
     {
       YYDPRINTF ((stderr, "Reading a token: "));
@@ -2039,20 +2048,16 @@ yyparse ()
       goto yyreduce;
     }
 
-  if (yyn == YYFINAL)
-    YYACCEPT;
-
   /* Count tokens shifted since error; after three, turn off error
      status.  */
   if (yyerrstatus)
     yyerrstatus--;
 
-  /* Shift the look-ahead token.  */
+  /* Shift the lookahead token.  */
   YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
 
-  /* Discard the shifted token unless it is eof.  */
-  if (yychar != YYEOF)
-    yychar = YYEMPTY;
+  /* Discard the shifted token.  */
+  yychar = YYEMPTY;
 
   yystate = yyn;
   *++yyvsp = yylval;
@@ -2092,7 +2097,9 @@ yyparse ()
   switch (yyn)
     {
         case 2:
-#line 377 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 377 "./parse.y"
     {
 			  /* Case of regular command.  Discard the error
 			     safety net,and return the command just parsed. */
@@ -2106,7 +2113,9 @@ yyparse ()
     break;
 
   case 3:
-#line 388 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 388 "./parse.y"
     {
 			  /* Case of regular command, but not a very
 			     interesting one.  Return a NULL command. */
@@ -2118,7 +2127,9 @@ yyparse ()
     break;
 
   case 4:
-#line 397 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 397 "./parse.y"
     {
 			  /* Error during parsing.  Return NULL command. */
 			  global_command = (COMMAND *)NULL;
@@ -2136,7 +2147,9 @@ yyparse ()
     break;
 
   case 5:
-#line 412 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 412 "./parse.y"
     {
 			  /* Case of EOF seen by itself.  Do ignoreeof or
 			     not. */
@@ -2147,17 +2160,23 @@ yyparse ()
     break;
 
   case 6:
-#line 422 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 422 "./parse.y"
     { (yyval.word_list) = make_word_list ((yyvsp[(1) - (1)].word), (WORD_LIST *)NULL); }
     break;
 
   case 7:
-#line 424 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 424 "./parse.y"
     { (yyval.word_list) = make_word_list ((yyvsp[(2) - (2)].word), (yyvsp[(1) - (2)].word_list)); }
     break;
 
   case 8:
-#line 428 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 428 "./parse.y"
     {
 			  source.dest = 1;
 			  redir.filename = (yyvsp[(2) - (2)].word);
@@ -2166,7 +2185,9 @@ yyparse ()
     break;
 
   case 9:
-#line 434 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 434 "./parse.y"
     {
 			  source.dest = 0;
 			  redir.filename = (yyvsp[(2) - (2)].word);
@@ -2175,7 +2196,9 @@ yyparse ()
     break;
 
   case 10:
-#line 440 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 440 "./parse.y"
     {
 			  source.dest = (yyvsp[(1) - (3)].number);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2184,7 +2207,9 @@ yyparse ()
     break;
 
   case 11:
-#line 446 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 446 "./parse.y"
     {
 			  source.dest = (yyvsp[(1) - (3)].number);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2193,7 +2218,9 @@ yyparse ()
     break;
 
   case 12:
-#line 452 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 452 "./parse.y"
     {
 			  source.filename = (yyvsp[(1) - (3)].word);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2202,7 +2229,9 @@ yyparse ()
     break;
 
   case 13:
-#line 458 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 458 "./parse.y"
     {
 			  source.filename = (yyvsp[(1) - (3)].word);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2211,7 +2240,9 @@ yyparse ()
     break;
 
   case 14:
-#line 464 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 464 "./parse.y"
     {
 			  source.dest = 1;
 			  redir.filename = (yyvsp[(2) - (2)].word);
@@ -2220,7 +2251,9 @@ yyparse ()
     break;
 
   case 15:
-#line 470 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 470 "./parse.y"
     {
 			  source.dest = (yyvsp[(1) - (3)].number);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2229,7 +2262,9 @@ yyparse ()
     break;
 
   case 16:
-#line 476 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 476 "./parse.y"
     {
 			  source.filename = (yyvsp[(1) - (3)].word);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2238,7 +2273,9 @@ yyparse ()
     break;
 
   case 17:
-#line 482 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 482 "./parse.y"
     {
 			  source.dest = 1;
 			  redir.filename = (yyvsp[(2) - (2)].word);
@@ -2247,7 +2284,9 @@ yyparse ()
     break;
 
   case 18:
-#line 488 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 488 "./parse.y"
     {
 			  source.dest = (yyvsp[(1) - (3)].number);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2256,7 +2295,9 @@ yyparse ()
     break;
 
   case 19:
-#line 494 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 494 "./parse.y"
     {
 			  source.filename = (yyvsp[(1) - (3)].word);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2265,7 +2306,9 @@ yyparse ()
     break;
 
   case 20:
-#line 500 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 500 "./parse.y"
     {
 			  source.dest = 0;
 			  redir.filename = (yyvsp[(2) - (2)].word);
@@ -2274,7 +2317,9 @@ yyparse ()
     break;
 
   case 21:
-#line 506 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 506 "./parse.y"
     {
 			  source.dest = (yyvsp[(1) - (3)].number);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2283,7 +2328,9 @@ yyparse ()
     break;
 
   case 22:
-#line 512 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 512 "./parse.y"
     {
 			  source.filename = (yyvsp[(1) - (3)].word);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2292,7 +2339,9 @@ yyparse ()
     break;
 
   case 23:
-#line 518 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 518 "./parse.y"
     {
 			  source.dest = 0;
 			  redir.filename = (yyvsp[(2) - (2)].word);
@@ -2302,7 +2351,9 @@ yyparse ()
     break;
 
   case 24:
-#line 525 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 525 "./parse.y"
     {
 			  source.dest = (yyvsp[(1) - (3)].number);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2312,7 +2363,9 @@ yyparse ()
     break;
 
   case 25:
-#line 532 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 532 "./parse.y"
     {
 			  source.filename = (yyvsp[(1) - (3)].word);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2322,7 +2375,9 @@ yyparse ()
     break;
 
   case 26:
-#line 539 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 539 "./parse.y"
     {
 			  source.dest = 0;
 			  redir.filename = (yyvsp[(2) - (2)].word);
@@ -2332,7 +2387,9 @@ yyparse ()
     break;
 
   case 27:
-#line 546 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 546 "./parse.y"
     {
 			  source.dest = (yyvsp[(1) - (3)].number);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2342,7 +2399,9 @@ yyparse ()
     break;
 
   case 28:
-#line 553 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 553 "./parse.y"
     {
 			  source.filename = (yyvsp[(1) - (3)].word);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2352,7 +2411,9 @@ yyparse ()
     break;
 
   case 29:
-#line 560 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 560 "./parse.y"
     {
 			  source.dest = 0;
 			  redir.filename = (yyvsp[(2) - (2)].word);
@@ -2361,7 +2422,9 @@ yyparse ()
     break;
 
   case 30:
-#line 566 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 566 "./parse.y"
     {
 			  source.dest = (yyvsp[(1) - (3)].number);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2370,7 +2433,9 @@ yyparse ()
     break;
 
   case 31:
-#line 572 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 572 "./parse.y"
     {
 			  source.filename = (yyvsp[(1) - (3)].word);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2379,7 +2444,9 @@ yyparse ()
     break;
 
   case 32:
-#line 578 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 578 "./parse.y"
     {
 			  source.dest = 0;
 			  redir.dest = (yyvsp[(2) - (2)].number);
@@ -2388,7 +2455,9 @@ yyparse ()
     break;
 
   case 33:
-#line 584 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 584 "./parse.y"
     {
 			  source.dest = (yyvsp[(1) - (3)].number);
 			  redir.dest = (yyvsp[(3) - (3)].number);
@@ -2397,7 +2466,9 @@ yyparse ()
     break;
 
   case 34:
-#line 590 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 590 "./parse.y"
     {
 			  source.filename = (yyvsp[(1) - (3)].word);
 			  redir.dest = (yyvsp[(3) - (3)].number);
@@ -2406,7 +2477,9 @@ yyparse ()
     break;
 
   case 35:
-#line 596 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 596 "./parse.y"
     {
 			  source.dest = 1;
 			  redir.dest = (yyvsp[(2) - (2)].number);
@@ -2415,7 +2488,9 @@ yyparse ()
     break;
 
   case 36:
-#line 602 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 602 "./parse.y"
     {
 			  source.dest = (yyvsp[(1) - (3)].number);
 			  redir.dest = (yyvsp[(3) - (3)].number);
@@ -2424,7 +2499,9 @@ yyparse ()
     break;
 
   case 37:
-#line 608 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 608 "./parse.y"
     {
 			  source.filename = (yyvsp[(1) - (3)].word);
 			  redir.dest = (yyvsp[(3) - (3)].number);
@@ -2433,7 +2510,9 @@ yyparse ()
     break;
 
   case 38:
-#line 614 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 614 "./parse.y"
     {
 			  source.dest = 0;
 			  redir.filename = (yyvsp[(2) - (2)].word);
@@ -2442,7 +2521,9 @@ yyparse ()
     break;
 
   case 39:
-#line 620 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 620 "./parse.y"
     {
 			  source.dest = (yyvsp[(1) - (3)].number);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2451,7 +2532,9 @@ yyparse ()
     break;
 
   case 40:
-#line 626 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 626 "./parse.y"
     {
 			  source.filename = (yyvsp[(1) - (3)].word);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2460,7 +2543,9 @@ yyparse ()
     break;
 
   case 41:
-#line 632 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 632 "./parse.y"
     {
 			  source.dest = 1;
 			  redir.filename = (yyvsp[(2) - (2)].word);
@@ -2469,7 +2554,9 @@ yyparse ()
     break;
 
   case 42:
-#line 638 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 638 "./parse.y"
     {
 			  source.dest = (yyvsp[(1) - (3)].number);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2478,7 +2565,9 @@ yyparse ()
     break;
 
   case 43:
-#line 644 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 644 "./parse.y"
     {
 			  source.filename = (yyvsp[(1) - (3)].word);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2487,7 +2576,9 @@ yyparse ()
     break;
 
   case 44:
-#line 650 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 650 "./parse.y"
     {
 			  source.dest = 1;
 			  redir.dest = 0;
@@ -2496,7 +2587,9 @@ yyparse ()
     break;
 
   case 45:
-#line 656 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 656 "./parse.y"
     {
 			  source.dest = (yyvsp[(1) - (3)].number);
 			  redir.dest = 0;
@@ -2505,7 +2598,9 @@ yyparse ()
     break;
 
   case 46:
-#line 662 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 662 "./parse.y"
     {
 			  source.filename = (yyvsp[(1) - (3)].word);
 			  redir.dest = 0;
@@ -2514,7 +2609,9 @@ yyparse ()
     break;
 
   case 47:
-#line 668 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 668 "./parse.y"
     {
 			  source.dest = 0;
 			  redir.dest = 0;
@@ -2523,7 +2620,9 @@ yyparse ()
     break;
 
   case 48:
-#line 674 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 674 "./parse.y"
     {
 			  source.dest = (yyvsp[(1) - (3)].number);
 			  redir.dest = 0;
@@ -2532,7 +2631,9 @@ yyparse ()
     break;
 
   case 49:
-#line 680 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 680 "./parse.y"
     {
 			  source.filename = (yyvsp[(1) - (3)].word);
 			  redir.dest = 0;
@@ -2541,7 +2642,9 @@ yyparse ()
     break;
 
   case 50:
-#line 686 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 686 "./parse.y"
     {
 			  source.dest = 1;
 			  redir.filename = (yyvsp[(2) - (2)].word);
@@ -2550,7 +2653,9 @@ yyparse ()
     break;
 
   case 51:
-#line 692 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 692 "./parse.y"
     {
 			  source.dest = 1;
 			  redir.filename = (yyvsp[(2) - (2)].word);
@@ -2559,29 +2664,39 @@ yyparse ()
     break;
 
   case 52:
-#line 700 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 700 "./parse.y"
     { (yyval.element).word = (yyvsp[(1) - (1)].word); (yyval.element).redirect = 0; }
     break;
 
   case 53:
-#line 702 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 702 "./parse.y"
     { (yyval.element).word = (yyvsp[(1) - (1)].word); (yyval.element).redirect = 0; }
     break;
 
   case 54:
-#line 704 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 704 "./parse.y"
     { (yyval.element).redirect = (yyvsp[(1) - (1)].redirect); (yyval.element).word = 0; }
     break;
 
   case 55:
-#line 708 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 708 "./parse.y"
     {
 			  (yyval.redirect) = (yyvsp[(1) - (1)].redirect);
 			}
     break;
 
   case 56:
-#line 712 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 712 "./parse.y"
     {
 			  register REDIRECT *t;
 
@@ -2593,27 +2708,37 @@ yyparse ()
     break;
 
   case 57:
-#line 723 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 723 "./parse.y"
     { (yyval.command) = make_simple_command ((yyvsp[(1) - (1)].element), (COMMAND *)NULL); }
     break;
 
   case 58:
-#line 725 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 725 "./parse.y"
     { (yyval.command) = make_simple_command ((yyvsp[(2) - (2)].element), (yyvsp[(1) - (2)].command)); }
     break;
 
   case 59:
-#line 729 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 729 "./parse.y"
     { (yyval.command) = clean_simple_command ((yyvsp[(1) - (1)].command)); }
     break;
 
   case 60:
-#line 731 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 731 "./parse.y"
     { (yyval.command) = (yyvsp[(1) - (1)].command); }
     break;
 
   case 61:
-#line 733 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 733 "./parse.y"
     {
 			  COMMAND *tc;
 
@@ -2632,72 +2757,100 @@ yyparse ()
     break;
 
   case 62:
-#line 749 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 749 "./parse.y"
     { (yyval.command) = (yyvsp[(1) - (1)].command); }
     break;
 
   case 63:
-#line 751 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 751 "./parse.y"
     { (yyval.command) = (yyvsp[(1) - (1)].command); }
     break;
 
   case 64:
-#line 755 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 755 "./parse.y"
     { (yyval.command) = (yyvsp[(1) - (1)].command); }
     break;
 
   case 65:
-#line 757 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 757 "./parse.y"
     { (yyval.command) = (yyvsp[(1) - (1)].command); }
     break;
 
   case 66:
-#line 759 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 759 "./parse.y"
     { (yyval.command) = make_while_command ((yyvsp[(2) - (5)].command), (yyvsp[(4) - (5)].command)); }
     break;
 
   case 67:
-#line 761 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 761 "./parse.y"
     { (yyval.command) = make_until_command ((yyvsp[(2) - (5)].command), (yyvsp[(4) - (5)].command)); }
     break;
 
   case 68:
-#line 763 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 763 "./parse.y"
     { (yyval.command) = (yyvsp[(1) - (1)].command); }
     break;
 
   case 69:
-#line 765 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 765 "./parse.y"
     { (yyval.command) = (yyvsp[(1) - (1)].command); }
     break;
 
   case 70:
-#line 767 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 767 "./parse.y"
     { (yyval.command) = (yyvsp[(1) - (1)].command); }
     break;
 
   case 71:
-#line 769 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 769 "./parse.y"
     { (yyval.command) = (yyvsp[(1) - (1)].command); }
     break;
 
   case 72:
-#line 771 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 771 "./parse.y"
     { (yyval.command) = (yyvsp[(1) - (1)].command); }
     break;
 
   case 73:
-#line 773 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 773 "./parse.y"
     { (yyval.command) = (yyvsp[(1) - (1)].command); }
     break;
 
   case 74:
-#line 775 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 775 "./parse.y"
     { (yyval.command) = (yyvsp[(1) - (1)].command); }
     break;
 
   case 75:
-#line 779 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 779 "./parse.y"
     {
 			  (yyval.command) = make_for_command ((yyvsp[(2) - (6)].word), add_string_to_list ("\"$@\"", (WORD_LIST *)NULL), (yyvsp[(5) - (6)].command), word_lineno[word_top]);
 			  if (word_top > 0) word_top--;
@@ -2705,7 +2858,9 @@ yyparse ()
     break;
 
   case 76:
-#line 784 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 784 "./parse.y"
     {
 			  (yyval.command) = make_for_command ((yyvsp[(2) - (6)].word), add_string_to_list ("\"$@\"", (WORD_LIST *)NULL), (yyvsp[(5) - (6)].command), word_lineno[word_top]);
 			  if (word_top > 0) word_top--;
@@ -2713,7 +2868,9 @@ yyparse ()
     break;
 
   case 77:
-#line 789 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 789 "./parse.y"
     {
 			  (yyval.command) = make_for_command ((yyvsp[(2) - (7)].word), add_string_to_list ("\"$@\"", (WORD_LIST *)NULL), (yyvsp[(6) - (7)].command), word_lineno[word_top]);
 			  if (word_top > 0) word_top--;
@@ -2721,7 +2878,9 @@ yyparse ()
     break;
 
   case 78:
-#line 794 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 794 "./parse.y"
     {
 			  (yyval.command) = make_for_command ((yyvsp[(2) - (7)].word), add_string_to_list ("\"$@\"", (WORD_LIST *)NULL), (yyvsp[(6) - (7)].command), word_lineno[word_top]);
 			  if (word_top > 0) word_top--;
@@ -2729,7 +2888,9 @@ yyparse ()
     break;
 
   case 79:
-#line 799 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 799 "./parse.y"
     {
 			  (yyval.command) = make_for_command ((yyvsp[(2) - (10)].word), REVERSE_LIST ((yyvsp[(5) - (10)].word_list), WORD_LIST *), (yyvsp[(9) - (10)].command), word_lineno[word_top]);
 			  if (word_top > 0) word_top--;
@@ -2737,7 +2898,9 @@ yyparse ()
     break;
 
   case 80:
-#line 804 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 804 "./parse.y"
     {
 			  (yyval.command) = make_for_command ((yyvsp[(2) - (10)].word), REVERSE_LIST ((yyvsp[(5) - (10)].word_list), WORD_LIST *), (yyvsp[(9) - (10)].command), word_lineno[word_top]);
 			  if (word_top > 0) word_top--;
@@ -2745,7 +2908,9 @@ yyparse ()
     break;
 
   case 81:
-#line 809 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 809 "./parse.y"
     {
 			  (yyval.command) = make_for_command ((yyvsp[(2) - (9)].word), (WORD_LIST *)NULL, (yyvsp[(8) - (9)].command), word_lineno[word_top]);
 			  if (word_top > 0) word_top--;
@@ -2753,7 +2918,9 @@ yyparse ()
     break;
 
   case 82:
-#line 814 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 814 "./parse.y"
     {
 			  (yyval.command) = make_for_command ((yyvsp[(2) - (9)].word), (WORD_LIST *)NULL, (yyvsp[(8) - (9)].command), word_lineno[word_top]);
 			  if (word_top > 0) word_top--;
@@ -2761,7 +2928,9 @@ yyparse ()
     break;
 
   case 83:
-#line 821 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 821 "./parse.y"
     {
 				  (yyval.command) = make_arith_for_command ((yyvsp[(2) - (7)].word_list), (yyvsp[(6) - (7)].command), arith_for_lineno);
 				  if (word_top > 0) word_top--;
@@ -2769,7 +2938,9 @@ yyparse ()
     break;
 
   case 84:
-#line 826 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 826 "./parse.y"
     {
 				  (yyval.command) = make_arith_for_command ((yyvsp[(2) - (7)].word_list), (yyvsp[(6) - (7)].command), arith_for_lineno);
 				  if (word_top > 0) word_top--;
@@ -2777,7 +2948,9 @@ yyparse ()
     break;
 
   case 85:
-#line 831 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 831 "./parse.y"
     {
 				  (yyval.command) = make_arith_for_command ((yyvsp[(2) - (5)].word_list), (yyvsp[(4) - (5)].command), arith_for_lineno);
 				  if (word_top > 0) word_top--;
@@ -2785,7 +2958,9 @@ yyparse ()
     break;
 
   case 86:
-#line 836 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 836 "./parse.y"
     {
 				  (yyval.command) = make_arith_for_command ((yyvsp[(2) - (5)].word_list), (yyvsp[(4) - (5)].command), arith_for_lineno);
 				  if (word_top > 0) word_top--;
@@ -2793,7 +2968,9 @@ yyparse ()
     break;
 
   case 87:
-#line 843 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 843 "./parse.y"
     {
 			  (yyval.command) = make_select_command ((yyvsp[(2) - (6)].word), add_string_to_list ("\"$@\"", (WORD_LIST *)NULL), (yyvsp[(5) - (6)].command), word_lineno[word_top]);
 			  if (word_top > 0) word_top--;
@@ -2801,7 +2978,9 @@ yyparse ()
     break;
 
   case 88:
-#line 848 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 848 "./parse.y"
     {
 			  (yyval.command) = make_select_command ((yyvsp[(2) - (6)].word), add_string_to_list ("\"$@\"", (WORD_LIST *)NULL), (yyvsp[(5) - (6)].command), word_lineno[word_top]);
 			  if (word_top > 0) word_top--;
@@ -2809,7 +2988,9 @@ yyparse ()
     break;
 
   case 89:
-#line 853 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 853 "./parse.y"
     {
 			  (yyval.command) = make_select_command ((yyvsp[(2) - (7)].word), add_string_to_list ("\"$@\"", (WORD_LIST *)NULL), (yyvsp[(6) - (7)].command), word_lineno[word_top]);
 			  if (word_top > 0) word_top--;
@@ -2817,7 +2998,9 @@ yyparse ()
     break;
 
   case 90:
-#line 858 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 858 "./parse.y"
     {
 			  (yyval.command) = make_select_command ((yyvsp[(2) - (7)].word), add_string_to_list ("\"$@\"", (WORD_LIST *)NULL), (yyvsp[(6) - (7)].command), word_lineno[word_top]);
 			  if (word_top > 0) word_top--;
@@ -2825,7 +3008,9 @@ yyparse ()
     break;
 
   case 91:
-#line 863 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 863 "./parse.y"
     {
 			  (yyval.command) = make_select_command ((yyvsp[(2) - (10)].word), REVERSE_LIST ((yyvsp[(5) - (10)].word_list), WORD_LIST *), (yyvsp[(9) - (10)].command), word_lineno[word_top]);
 			  if (word_top > 0) word_top--;
@@ -2833,7 +3018,9 @@ yyparse ()
     break;
 
   case 92:
-#line 868 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 868 "./parse.y"
     {
 			  (yyval.command) = make_select_command ((yyvsp[(2) - (10)].word), REVERSE_LIST ((yyvsp[(5) - (10)].word_list), WORD_LIST *), (yyvsp[(9) - (10)].command), word_lineno[word_top]);
 			  if (word_top > 0) word_top--;
@@ -2841,7 +3028,9 @@ yyparse ()
     break;
 
   case 93:
-#line 875 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 875 "./parse.y"
     {
 			  (yyval.command) = make_case_command ((yyvsp[(2) - (6)].word), (PATTERN_LIST *)NULL, word_lineno[word_top]);
 			  if (word_top > 0) word_top--;
@@ -2849,7 +3038,9 @@ yyparse ()
     break;
 
   case 94:
-#line 880 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 880 "./parse.y"
     {
 			  (yyval.command) = make_case_command ((yyvsp[(2) - (7)].word), (yyvsp[(5) - (7)].pattern), word_lineno[word_top]);
 			  if (word_top > 0) word_top--;
@@ -2857,7 +3048,9 @@ yyparse ()
     break;
 
   case 95:
-#line 885 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 885 "./parse.y"
     {
 			  (yyval.command) = make_case_command ((yyvsp[(2) - (6)].word), (yyvsp[(5) - (6)].pattern), word_lineno[word_top]);
 			  if (word_top > 0) word_top--;
@@ -2865,27 +3058,37 @@ yyparse ()
     break;
 
   case 96:
-#line 892 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 892 "./parse.y"
     { (yyval.command) = make_function_def ((yyvsp[(1) - (5)].word), (yyvsp[(5) - (5)].command), function_dstart, function_bstart); }
     break;
 
   case 97:
-#line 895 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 895 "./parse.y"
     { (yyval.command) = make_function_def ((yyvsp[(2) - (6)].word), (yyvsp[(6) - (6)].command), function_dstart, function_bstart); }
     break;
 
   case 98:
-#line 898 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 898 "./parse.y"
     { (yyval.command) = make_function_def ((yyvsp[(2) - (4)].word), (yyvsp[(4) - (4)].command), function_dstart, function_bstart); }
     break;
 
   case 99:
-#line 902 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 902 "./parse.y"
     { (yyval.command) = (yyvsp[(1) - (1)].command); }
     break;
 
   case 100:
-#line 904 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 904 "./parse.y"
     {
 			  COMMAND *tc;
 
@@ -2917,7 +3120,9 @@ yyparse ()
     break;
 
   case 101:
-#line 935 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 935 "./parse.y"
     {
 			  (yyval.command) = make_subshell_command ((yyvsp[(2) - (3)].command));
 			  (yyval.command)->flags |= CMD_WANT_SUBSHELL;
@@ -2925,7 +3130,9 @@ yyparse ()
     break;
 
   case 102:
-#line 942 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 942 "./parse.y"
     {
 			  (yyval.command) = make_coproc_command ("COPROC", (yyvsp[(2) - (2)].command));
 			  (yyval.command)->flags |= CMD_WANT_SUBSHELL|CMD_COPROC_SUBSHELL;
@@ -2933,7 +3140,9 @@ yyparse ()
     break;
 
   case 103:
-#line 947 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 947 "./parse.y"
     {
 			  COMMAND *tc;
 
@@ -2953,7 +3162,9 @@ yyparse ()
     break;
 
   case 104:
-#line 964 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 964 "./parse.y"
     {
 			  (yyval.command) = make_coproc_command ((yyvsp[(2) - (3)].word)->word, (yyvsp[(3) - (3)].command));
 			  (yyval.command)->flags |= CMD_WANT_SUBSHELL|CMD_COPROC_SUBSHELL;
@@ -2961,7 +3172,9 @@ yyparse ()
     break;
 
   case 105:
-#line 969 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 969 "./parse.y"
     {
 			  COMMAND *tc;
 
@@ -2981,7 +3194,9 @@ yyparse ()
     break;
 
   case 106:
-#line 986 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 986 "./parse.y"
     {
 			  (yyval.command) = make_coproc_command ("COPROC", clean_simple_command ((yyvsp[(2) - (2)].command)));
 			  (yyval.command)->flags |= CMD_WANT_SUBSHELL|CMD_COPROC_SUBSHELL;
@@ -2989,117 +3204,163 @@ yyparse ()
     break;
 
   case 107:
-#line 993 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 993 "./parse.y"
     { (yyval.command) = make_if_command ((yyvsp[(2) - (5)].command), (yyvsp[(4) - (5)].command), (COMMAND *)NULL); }
     break;
 
   case 108:
-#line 995 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 995 "./parse.y"
     { (yyval.command) = make_if_command ((yyvsp[(2) - (7)].command), (yyvsp[(4) - (7)].command), (yyvsp[(6) - (7)].command)); }
     break;
 
   case 109:
-#line 997 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 997 "./parse.y"
     { (yyval.command) = make_if_command ((yyvsp[(2) - (6)].command), (yyvsp[(4) - (6)].command), (yyvsp[(5) - (6)].command)); }
     break;
 
   case 110:
-#line 1002 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1002 "./parse.y"
     { (yyval.command) = make_group_command ((yyvsp[(2) - (3)].command)); }
     break;
 
   case 111:
-#line 1006 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1006 "./parse.y"
     { (yyval.command) = make_arith_command ((yyvsp[(1) - (1)].word_list)); }
     break;
 
   case 112:
-#line 1010 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1010 "./parse.y"
     { (yyval.command) = (yyvsp[(2) - (3)].command); }
     break;
 
   case 113:
-#line 1014 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1014 "./parse.y"
     { (yyval.command) = make_if_command ((yyvsp[(2) - (4)].command), (yyvsp[(4) - (4)].command), (COMMAND *)NULL); }
     break;
 
   case 114:
-#line 1016 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1016 "./parse.y"
     { (yyval.command) = make_if_command ((yyvsp[(2) - (6)].command), (yyvsp[(4) - (6)].command), (yyvsp[(6) - (6)].command)); }
     break;
 
   case 115:
-#line 1018 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1018 "./parse.y"
     { (yyval.command) = make_if_command ((yyvsp[(2) - (5)].command), (yyvsp[(4) - (5)].command), (yyvsp[(5) - (5)].command)); }
     break;
 
   case 117:
-#line 1023 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1023 "./parse.y"
     { (yyvsp[(2) - (2)].pattern)->next = (yyvsp[(1) - (2)].pattern); (yyval.pattern) = (yyvsp[(2) - (2)].pattern); }
     break;
 
   case 118:
-#line 1027 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1027 "./parse.y"
     { (yyval.pattern) = make_pattern_list ((yyvsp[(2) - (4)].word_list), (yyvsp[(4) - (4)].command)); }
     break;
 
   case 119:
-#line 1029 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1029 "./parse.y"
     { (yyval.pattern) = make_pattern_list ((yyvsp[(2) - (4)].word_list), (COMMAND *)NULL); }
     break;
 
   case 120:
-#line 1031 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1031 "./parse.y"
     { (yyval.pattern) = make_pattern_list ((yyvsp[(3) - (5)].word_list), (yyvsp[(5) - (5)].command)); }
     break;
 
   case 121:
-#line 1033 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1033 "./parse.y"
     { (yyval.pattern) = make_pattern_list ((yyvsp[(3) - (5)].word_list), (COMMAND *)NULL); }
     break;
 
   case 122:
-#line 1037 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1037 "./parse.y"
     { (yyval.pattern) = (yyvsp[(1) - (2)].pattern); }
     break;
 
   case 123:
-#line 1039 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1039 "./parse.y"
     { (yyvsp[(2) - (3)].pattern)->next = (yyvsp[(1) - (3)].pattern); (yyval.pattern) = (yyvsp[(2) - (3)].pattern); }
     break;
 
   case 124:
-#line 1041 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1041 "./parse.y"
     { (yyvsp[(1) - (2)].pattern)->flags |= CASEPAT_FALLTHROUGH; (yyval.pattern) = (yyvsp[(1) - (2)].pattern); }
     break;
 
   case 125:
-#line 1043 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1043 "./parse.y"
     { (yyvsp[(2) - (3)].pattern)->flags |= CASEPAT_FALLTHROUGH; (yyvsp[(2) - (3)].pattern)->next = (yyvsp[(1) - (3)].pattern); (yyval.pattern) = (yyvsp[(2) - (3)].pattern); }
     break;
 
   case 126:
-#line 1045 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1045 "./parse.y"
     { (yyvsp[(1) - (2)].pattern)->flags |= CASEPAT_TESTNEXT; (yyval.pattern) = (yyvsp[(1) - (2)].pattern); }
     break;
 
   case 127:
-#line 1047 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1047 "./parse.y"
     { (yyvsp[(2) - (3)].pattern)->flags |= CASEPAT_TESTNEXT; (yyvsp[(2) - (3)].pattern)->next = (yyvsp[(1) - (3)].pattern); (yyval.pattern) = (yyvsp[(2) - (3)].pattern); }
     break;
 
   case 128:
-#line 1051 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1051 "./parse.y"
     { (yyval.word_list) = make_word_list ((yyvsp[(1) - (1)].word), (WORD_LIST *)NULL); }
     break;
 
   case 129:
-#line 1053 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1053 "./parse.y"
     { (yyval.word_list) = make_word_list ((yyvsp[(3) - (3)].word), (yyvsp[(1) - (3)].word_list)); }
     break;
 
   case 130:
-#line 1062 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1062 "./parse.y"
     {
 			  (yyval.command) = (yyvsp[(2) - (2)].command);
 			  if (need_here_doc)
@@ -3108,14 +3369,18 @@ yyparse ()
     break;
 
   case 132:
-#line 1071 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1071 "./parse.y"
     {
 			  (yyval.command) = (yyvsp[(2) - (2)].command);
 			}
     break;
 
   case 134:
-#line 1078 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1078 "./parse.y"
     {
 			  if ((yyvsp[(1) - (3)].command)->type == cm_connection)
 			    (yyval.command) = connect_async_list ((yyvsp[(1) - (3)].command), (COMMAND *)NULL, '&');
@@ -3125,17 +3390,23 @@ yyparse ()
     break;
 
   case 136:
-#line 1089 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1089 "./parse.y"
     { (yyval.command) = command_connect ((yyvsp[(1) - (4)].command), (yyvsp[(4) - (4)].command), AND_AND); }
     break;
 
   case 137:
-#line 1091 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1091 "./parse.y"
     { (yyval.command) = command_connect ((yyvsp[(1) - (4)].command), (yyvsp[(4) - (4)].command), OR_OR); }
     break;
 
   case 138:
-#line 1093 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1093 "./parse.y"
     {
 			  if ((yyvsp[(1) - (4)].command)->type == cm_connection)
 			    (yyval.command) = connect_async_list ((yyvsp[(1) - (4)].command), (yyvsp[(4) - (4)].command), '&');
@@ -3145,37 +3416,51 @@ yyparse ()
     break;
 
   case 139:
-#line 1100 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1100 "./parse.y"
     { (yyval.command) = command_connect ((yyvsp[(1) - (4)].command), (yyvsp[(4) - (4)].command), ';'); }
     break;
 
   case 140:
-#line 1102 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1102 "./parse.y"
     { (yyval.command) = command_connect ((yyvsp[(1) - (4)].command), (yyvsp[(4) - (4)].command), ';'); }
     break;
 
   case 141:
-#line 1104 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1104 "./parse.y"
     { (yyval.command) = (yyvsp[(1) - (1)].command); }
     break;
 
   case 144:
-#line 1112 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1112 "./parse.y"
     { (yyval.number) = '\n'; }
     break;
 
   case 145:
-#line 1114 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1114 "./parse.y"
     { (yyval.number) = ';'; }
     break;
 
   case 146:
-#line 1116 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1116 "./parse.y"
     { (yyval.number) = yacc_EOF; }
     break;
 
   case 149:
-#line 1130 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1130 "./parse.y"
     {
 			  (yyval.command) = (yyvsp[(1) - (1)].command);
 			  if (need_here_doc)
@@ -3191,7 +3476,9 @@ yyparse ()
     break;
 
   case 150:
-#line 1143 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1143 "./parse.y"
     {
 			  if ((yyvsp[(1) - (2)].command)->type == cm_connection)
 			    (yyval.command) = connect_async_list ((yyvsp[(1) - (2)].command), (COMMAND *)NULL, '&');
@@ -3210,7 +3497,9 @@ yyparse ()
     break;
 
   case 151:
-#line 1159 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1159 "./parse.y"
     {
 			  (yyval.command) = (yyvsp[(1) - (2)].command);
 			  if (need_here_doc)
@@ -3226,17 +3515,23 @@ yyparse ()
     break;
 
   case 152:
-#line 1174 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1174 "./parse.y"
     { (yyval.command) = command_connect ((yyvsp[(1) - (4)].command), (yyvsp[(4) - (4)].command), AND_AND); }
     break;
 
   case 153:
-#line 1176 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1176 "./parse.y"
     { (yyval.command) = command_connect ((yyvsp[(1) - (4)].command), (yyvsp[(4) - (4)].command), OR_OR); }
     break;
 
   case 154:
-#line 1178 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1178 "./parse.y"
     {
 			  if ((yyvsp[(1) - (3)].command)->type == cm_connection)
 			    (yyval.command) = connect_async_list ((yyvsp[(1) - (3)].command), (yyvsp[(3) - (3)].command), '&');
@@ -3246,22 +3541,30 @@ yyparse ()
     break;
 
   case 155:
-#line 1185 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1185 "./parse.y"
     { (yyval.command) = command_connect ((yyvsp[(1) - (3)].command), (yyvsp[(3) - (3)].command), ';'); }
     break;
 
   case 156:
-#line 1188 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1188 "./parse.y"
     { (yyval.command) = (yyvsp[(1) - (1)].command); }
     break;
 
   case 157:
-#line 1192 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1192 "./parse.y"
     { (yyval.command) = (yyvsp[(1) - (1)].command); }
     break;
 
   case 158:
-#line 1194 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1194 "./parse.y"
     {
 			  if ((yyvsp[(2) - (2)].command))
 			    (yyvsp[(2) - (2)].command)->flags ^= CMD_INVERT_RETURN;	/* toggle */
@@ -3270,7 +3573,9 @@ yyparse ()
     break;
 
   case 159:
-#line 1200 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1200 "./parse.y"
     {
 			  if ((yyvsp[(2) - (2)].command))
 			    (yyvsp[(2) - (2)].command)->flags |= (yyvsp[(1) - (2)].number);
@@ -3279,7 +3584,9 @@ yyparse ()
     break;
 
   case 160:
-#line 1206 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1206 "./parse.y"
     {
 			  ELEMENT x;
 
@@ -3299,7 +3606,9 @@ yyparse ()
     break;
 
   case 161:
-#line 1223 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1223 "./parse.y"
     {
 			  ELEMENT x;
 
@@ -3320,12 +3629,16 @@ yyparse ()
     break;
 
   case 162:
-#line 1243 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1243 "./parse.y"
     { (yyval.command) = command_connect ((yyvsp[(1) - (4)].command), (yyvsp[(4) - (4)].command), '|'); }
     break;
 
   case 163:
-#line 1245 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1245 "./parse.y"
     {
 			  /* Make cmd1 |& cmd2 equivalent to cmd1 2>&1 | cmd2 */
 			  COMMAND *tc;
@@ -3351,28 +3664,37 @@ yyparse ()
     break;
 
   case 164:
-#line 1268 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1268 "./parse.y"
     { (yyval.command) = (yyvsp[(1) - (1)].command); }
     break;
 
   case 165:
-#line 1272 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1272 "./parse.y"
     { (yyval.number) = CMD_TIME_PIPELINE; }
     break;
 
   case 166:
-#line 1274 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1274 "./parse.y"
     { (yyval.number) = CMD_TIME_PIPELINE|CMD_TIME_POSIX; }
     break;
 
   case 167:
-#line 1276 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1455 of yacc.c  */
+#line 1276 "./parse.y"
     { (yyval.number) = CMD_TIME_PIPELINE|CMD_TIME_POSIX; }
     break;
 
 
-/* Line 1267 of yacc.c.  */
-#line 3376 "y.tab.c"
+
+/* Line 1455 of yacc.c  */
+#line 3698 "y.tab.c"
       default: break;
     }
   YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
@@ -3383,7 +3705,6 @@ yyparse ()
 
   *++yyvsp = yyval;
 
-
   /* Now `shift' the result of the reduction.  Determine what state
      that goes to, based on the state we popped back to and the rule
      number reduced by.  */
@@ -3448,7 +3769,7 @@ yyparse ()
 
   if (yyerrstatus == 3)
     {
-      /* If just tried and failed to reuse look-ahead token after an
+      /* If just tried and failed to reuse lookahead token after an
 	 error, discard it.  */
 
       if (yychar <= YYEOF)
@@ -3465,7 +3786,7 @@ yyparse ()
 	}
     }
 
-  /* Else will try to reuse look-ahead token after shifting the error
+  /* Else will try to reuse lookahead token after shifting the error
      token.  */
   goto yyerrlab1;
 
@@ -3522,9 +3843,6 @@ yyparse ()
       YY_STACK_PRINT (yyss, yyssp);
     }
 
-  if (yyn == YYFINAL)
-    YYACCEPT;
-
   *++yyvsp = yylval;
 
 
@@ -3549,7 +3867,7 @@ yyparse ()
   yyresult = 1;
   goto yyreturn;
 
-#ifndef yyoverflow
+#if !defined(yyoverflow) || YYERROR_VERBOSE
 /*-------------------------------------------------.
 | yyexhaustedlab -- memory exhaustion comes here.  |
 `-------------------------------------------------*/
@@ -3560,7 +3878,7 @@ yyparse ()
 #endif
 
 yyreturn:
-  if (yychar != YYEOF && yychar != YYEMPTY)
+  if (yychar != YYEMPTY)
      yydestruct ("Cleanup: discarding lookahead",
 		 yytoken, &yylval);
   /* Do not reclaim the symbols of the rule which action triggered
@@ -3586,7 +3904,9 @@ yyparse ()
 }
 
 
-#line 1278 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1675 of yacc.c  */
+#line 1278 "./parse.y"
 
 
 /* Initial size to allocate for tokens, and the
@@ -4705,6 +5025,7 @@ shell_getc (remove_quoted_newline)
 	   is the last character).  If it's not the last character, we need
 	   to consume the quoted newline and move to the next character in
 	   the expansion. */
+#if defined (ALIAS)
 	if (expanding_alias () && shell_input_line[shell_input_line_index+1] == '\0')
 	  {
 	    uc = 0;
@@ -4715,7 +5036,8 @@ shell_getc (remove_quoted_newline)
 	    shell_input_line_index++;	/* skip newline */
 	    goto next_alias_char;	/* and get next character */
 	  }
-	else	    
+	else
+#endif 
 	  goto restart_read;
     }
 
@@ -4811,7 +5133,7 @@ yylex ()
 	 We do this only if it is time to do so. Notice that only here
 	 is the mail alarm reset; nothing takes place in check_mail ()
 	 except the checking of mail.  Please don't change this. */
-      if (prompt_is_ps1 && time_to_check_mail ())
+      if (prompt_is_ps1 && parse_and_execute_level == 0 && time_to_check_mail ())
 	{
 	  check_mail ();
 	  reset_mail_timer ();
@@ -5160,6 +5482,8 @@ reset_parser ()
   FREE (word_desc_to_read);
   word_desc_to_read = (WORD_DESC *)NULL;
 
+  eol_ungetc_lookahead = 0;
+
   current_token = '\n';		/* XXX */
   last_read_token = '\n';
   token_to_read = '\n';
@@ -6154,6 +6478,7 @@ xparse_dolparen (base, string, indp, flags)
      int flags;
 {
   sh_parser_state_t ps;
+  sh_input_line_state_t ls;
   int orig_ind, nc, sflags;
   char *ret, *s, *ep, *ostring;
 
@@ -6161,10 +6486,12 @@ xparse_dolparen (base, string, indp, flags)
   orig_ind = *indp;
   ostring = string;
 
+/*itrace("xparse_dolparen: size = %d shell_input_line = `%s'", shell_input_line_size, shell_input_line);*/
   sflags = SEVAL_NONINT|SEVAL_NOHIST|SEVAL_NOFREE;
   if (flags & SX_NOLONGJMP)
     sflags |= SEVAL_NOLONGJMP;
   save_parser_state (&ps);
+  save_input_line_state (&ls);
 
   /*(*/
   parser_state |= PST_CMDSUBST|PST_EOFTOKEN;	/* allow instant ')' */ /*(*/
@@ -6173,6 +6500,8 @@ xparse_dolparen (base, string, indp, flags)
 
   restore_parser_state (&ps);
   reset_parser ();
+  /* reset_parser clears shell_input_line and associated variables */
+  restore_input_line_state (&ls);
   if (interactive)
     token_to_read = 0;
 
@@ -7207,6 +7536,9 @@ history_delimiting_chars (line)
       return (current_command_line_count == 2 ? "\n" : "");
     }
 
+  if (parser_state & PST_COMPASSIGN)
+    return (" ");
+
   /* First, handle some special cases. */
   /*(*/
   /* If we just read `()', assume it's a function definition, and don't
@@ -7447,6 +7779,9 @@ decode_prompt_string (string)
 	    case 'A':
 	      /* Make the current time/date into a string. */
 	      (void) time (&the_time);
+#if defined (HAVE_TZSET)
+	      sv_tz ("TZ");		/* XXX -- just make sure */
+#endif
 	      tm = localtime (&the_time);
 
 	      if (c == 'd')
@@ -8217,6 +8552,12 @@ save_parser_state (ps)
   ps->expand_aliases = expand_aliases;
   ps->echo_input_at_read = echo_input_at_read;
 
+  ps->token = token;
+  ps->token_buffer_size = token_buffer_size;
+  /* Force reallocation on next call to read_token_word */
+  token = 0;
+  token_buffer_size = 0;
+
   return (ps);
 }
 
@@ -8258,6 +8599,44 @@ restore_parser_state (ps)
 
   expand_aliases = ps->expand_aliases;
   echo_input_at_read = ps->echo_input_at_read;
+
+  FREE (token);
+  token = ps->token;
+  token_buffer_size = ps->token_buffer_size;
+}
+
+sh_input_line_state_t *
+save_input_line_state (ls)
+     sh_input_line_state_t *ls;
+{
+  if (ls == 0)
+    ls = (sh_input_line_state_t *)xmalloc (sizeof (sh_input_line_state_t));
+  if (ls == 0)
+    return ((sh_input_line_state_t *)NULL);
+
+  ls->input_line = shell_input_line;
+  ls->input_line_size = shell_input_line_size;
+  ls->input_line_len = shell_input_line_len;
+  ls->input_line_index = shell_input_line_index;
+
+  /* force reallocation */
+  shell_input_line = 0;
+  shell_input_line_size = shell_input_line_len = shell_input_line_index = 0;
+  /*AMIR: added 'return ls' to fix cmopile error*/
+  return ls;
+}
+
+void
+restore_input_line_state (ls)
+     sh_input_line_state_t *ls;
+{
+  FREE (shell_input_line);
+  shell_input_line = ls->input_line;
+  shell_input_line_size = ls->input_line_size;
+  shell_input_line_len = ls->input_line_len;
+  shell_input_line_index = ls->input_line_index;
+
+  set_line_mbstate ();
 }
 
 /************************************************
@@ -8316,7 +8695,6 @@ set_line_mbstate ()
 	    shell_input_line_property[j] = 1;
 	  break;
 	}
-
       shell_input_line_property[i] = mbclen;
     }
 }
diff --git a/y.tab.h b/y.tab.h
index 0de3853..a9f4b1a 100644
--- a/y.tab.h
+++ b/y.tab.h
@@ -1,24 +1,23 @@
-/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Skeleton interface for Bison's Yacc-like parsers in C
+/* A Bison parser, made by GNU Bison 2.4.1.  */
 
-   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+/* Skeleton interface for Bison's Yacc-like parsers in C
+   
+      Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
    Free Software Foundation, Inc.
-
-   This program is free software; you can redistribute it and/or modify
+   
+   This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation; either version 2, or (at your option)
-   any later version.
-
+   the Free Software Foundation, either version 3 of the License, or
+   (at your option) any later version.
+   
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-
+   
    You should have received a copy of the GNU General Public License
-   along with this program; if not, write to the Free Software
-   Foundation, Inc., 51 Franklin Street, Fifth Floor,
-   Boston, MA 02110-1301, USA.  */
+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -29,10 +28,11 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-
+   
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
+
 /* Tokens.  */
 #ifndef YYTOKENTYPE
 # define YYTOKENTYPE
@@ -142,8 +142,11 @@
 
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef union YYSTYPE
-#line 323 "/Users/chet/src/bash/src/parse.y"
 {
+
+/* Line 1676 of yacc.c  */
+#line 323 "./parse.y"
+
   WORD_DESC *word;		/* the word that we read. */
   int number;			/* the number that we read. */
   WORD_LIST *word_list;
@@ -151,14 +154,17 @@ typedef union YYSTYPE
   REDIRECT *redirect;
   ELEMENT element;
   PATTERN_LIST *pattern;
-}
-/* Line 1489 of yacc.c.  */
-#line 157 "y.tab.h"
-	YYSTYPE;
+
+
+
+/* Line 1676 of yacc.c  */
+#line 162 "y.tab.h"
+} YYSTYPE;
+# define YYSTYPE_IS_TRIVIAL 1
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
-# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 extern YYSTYPE yylval;
 
+
